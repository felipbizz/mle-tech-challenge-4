[project]
name = "tech-challenge-4"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "src",
    "boto3>=1.35.86",
    "deltalake>=0.22.3",
    "dynaconf>=3.2.6",
    "joblib>=1.4.2",
    "matplotlib>=3.10.0",
    "mlflow>=2.19.0",
    "neuralforecast>=1.7.7",
    "polars>=1.17.1",
    "psutil>=6.1.1",
    "pynvml>=12.0.0",
    "python-dotenv>=1.0.1",
    "yfinance>=0.2.51",
]


[dependency-groups]
dev = [
    "black[jupyter]>=24.10.0",
    "pytest>=8.3.4",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "pytest-cov>=6.0.0",
    "taskipy>=1.14.1",
    "ruff>=0.9.2",
    "ignr>=2.2",
]
api = ["fastapi[standard]>=0.115.6"]
viz = ["matplotlib>=3.10.0", "seaborn>=0.13.2"]

[tool.uv.sources]
src = { workspace = true }

[tool.uv.workspace]
members = ["packages/*", "api"]

[tool.ruff]
line-length = 88
extend-exclude = ["migrations"]

[tool.ruff.lint]
preview = true
select = ["I", "F", "E", "W", "PL", "PT"]
ignore = ["PLR1711", "E731"]

[tool.ruff.format]
preview = true
quote-style = "double"

[tool.pytest.ini_options]
pythonpath = "."
addopts = "-p no:warnings"

[tool.taskipy.tasks]
lint = "ruff check . && ruff check . --diff"
format = "ruff check . --fix && ruff format ."
pre_test = "task lint"
test = "pytest tests -s -x --cov=packages/src --cov-report=html:coverage_report -vv"
